{"version":3,"sources":["CircleButton/CircleButton.js","ApiContext.js","notes-helpers.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","config.js","Note/Note.js","Error.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","NotefulForm/NotefulForm.js","AddFolder/AddFolder.js","AddNote/AddNote.js","App/App.js","index.js"],"names":["NavCircleButton","props","tag","className","childrenm","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","children","defaultProps","createContext","notes","folders","addFolder","addNote","deleteNote","findNote","arguments","length","undefined","noteId","find","note","id","NoteListNav","_this$context","this","context","_this$context$folders","_this$context$notes","react_default","a","map","folder","key","NavLink","to","concat","folderId","filter","countNotesForFolder","name","Link","type","react_fontawesome_index_es","icon","Component","contextType","ApiContext","NotePageNav","_this","match","params","findFolder","role","onClick","history","goBack","config","API_ENDPOINT","Note","handleClickDelete","e","preventDefault","fetch","method","headers","content-type","then","res","ok","json","Promise","reject","onDeleteNote","catch","error","console","_this$props","modified","format","Error","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","hasError","inherits","createClass","value","NoteListMain","notesForFolder","getNotesForFolder","src_Error","Note_Note_Note","NotePageMain","handleDeleteNote","push","content","split","para","i","NotefulForm","assign","action","AddFolder","_getPrototypeOf2","_len","args","Array","_key","apply","handleClickCancel","event","_this2","target","body","JSON","stringify","NotefulForm_NotefulForm","onSubmit","handleSubmit","htmlFor","AddNote","newNote","Date","App","setState","handleAddFolder","toConsumableArray","handleAddNote","all","_ref","_ref2","slicedToArray","notesRes","foldersRes","_ref3","_ref4","Fragment","path","Route","exact","component","Provider","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","render","BrowserRouter","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.c504d9a8.chunk.js","sourcesContent":["import React from 'react'\nimport './CircleButton.css'\n\nexport default function NavCircleButton(props) {\n  const { tag, className, childrenm, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavCircleButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavCircleButton.defaultProps ={\n  tag: 'a',\n}\n","import React from 'react'\n\nexport default React.createContext({\n  notes: [],\n  folders: [],\n  addFolder: () => {},\n  addNote: () => {},\n  deleteNote: () => {},\n})\n","\nexport const findFolder = (folders=[], folderId) =>\n  folders.find(folder => folder.id === folderId)\n\nexport const findNote = (notes=[], noteId) =>\n  notes.find(note => note.id === noteId)\n\nexport const getNotesForFolder = (notes=[], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folderId === folderId)\n)\n\nexport const countNotesForFolder = (notes=[], folderId) =>\n  notes.filter(note => note.folderId === folderId).length\n","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport PropTypes from 'prop-types'\nimport { countNotesForFolder } from '../notes-helpers'\nimport './NoteListNav.css'\n\nexport default class NoteListNav extends React.Component {\n  static contextType = ApiContext;\n\n  static propTypes = {\n    onSubmit: PropTypes.func,\n    onClick: PropTypes.func,\n    folder: PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n      name: PropTypes.string.isRequired\n    }),\n    note: PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n      name: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      modified: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      onDeleteNote: PropTypes.func\n    })\n  }\n\n  render() {\n    const { folders=[], notes=[] } = this.context\n    return (\n      <div className='NoteListNav'>\n        <ul className='NoteListNav__list'>\n          {folders.map(folder =>\n            <li key={folder.id}>\n              <NavLink\n                className='NoteListNav__folder-link'\n                to={`/folder/${folder.id}`}\n              >\n                <span className='NoteListNav__num-notes'>\n                  {countNotesForFolder(notes, folder.id)}\n                </span>\n                {folder.name}\n              </NavLink>\n            </li>\n          )}\n        </ul>\n        <div className='NoteListNav__button-wrapper'>\n          <CircleButton\n            tag={Link}\n            to='/add-folder'\n            type='button'\n            className='NoteListNav__add-folder-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Folder\n          </CircleButton>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport PropTypes from 'prop-types'\n\nimport { findNote, findFolder } from '../notes-helpers'\nimport './NotePageNav.css'\n\nexport default class NotePageNav extends React.Component {\n  static defaultProps = {\n    history: {\n      goBack: () => { }\n    },\n    match: {\n      params: {}\n    }\n  }\n\nstatic propTypes = {\n  onClick: PropTypes.func,\n    folder: PropTypes.shape({\n      name: PropTypes.string.isRequired\n    }),\n    note: PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n      name: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      modified: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    })\n  }\n\n  static contextType = ApiContext;\n\n  render() {\n    const { notes, folders, } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || {}\n    const folder = findFolder(folders, note.folderId)\n    return (\n      <div className='NotePageNav'>\n        <CircleButton\n          tag='button'\n          role='link'\n          onClick={() => this.props.history.goBack()}\n          className='NotePageNav__back-button'\n        >\n          <FontAwesomeIcon icon='chevron-left' />\n          <br />\n          Back\n        </CircleButton>\n        {folder && (\n          <h3 className='NotePageNav__folder-name'>\n            {folder.name}\n          </h3>\n        )}\n      </div>\n    )\n  }\n}\n","export default {\n  API_ENDPOINT: 'http://localhost:9090'\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { format } from 'date-fns'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport ApiContext from '../ApiContext'\nimport PropTypes from 'prop-types'\nimport config from '../config'\nimport './Note.css'\n\nexport default class Note extends React.Component {\n  static propTypes = {\n    onClick: PropTypes.func,\n    note: PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n      name: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      modified: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      onDeleteNote: PropTypes.func\n    })\n  }\n\n  static defaultProps ={\n    onDeleteNote: () => {},\n  }\n\n  static contextType = ApiContext;\n\n  handleClickDelete = e => {\n    e.preventDefault()\n    const noteId = this.props.id\n\n    fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      },\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(() => {\n        this.context.deleteNote(noteId)\n        // allow parent to perform extra behaviour\n        this.props.onDeleteNote(noteId)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    const { name, id, modified } = this.props\n    return (\n      <div className='Note'>\n        <h2 className='Note__title'>\n          <Link to={`/note/${id}`}>\n            {name}\n          </Link>\n        </h2>\n        <button\n          className='Note__delete'\n          type='button'\n          onClick={this.handleClickDelete}\n        >\n          <FontAwesomeIcon icon='trash-alt' />\n          {' '}\n          remove\n        </button>\n        <div className='Note__dates'>\n          <div className='Note__dates-modified'>\n            Modified\n            {' '}\n            <span className='Date'>\n              {format(modified, 'Do MMM YYYY')}\n            </span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport class Error extends Component {\n\nconstructor(props) {\n  super(props);\n  this.state = {\n    hasError: false\n  };\n}\n\nstatic getDerivedStateFromError(error) {\n  return { hasError: true };\n}\n\n    render() {\n  if (this.state.hasError) {      \n    return (\n      <h2>Could not display this currency.</h2>\n    );\n  }\n  return this.props.children;\n} \n}\n\nexport default Error\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Note from '../Note/Note'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport PropTypes from 'prop-types'\nimport { getNotesForFolder } from '../notes-helpers'\nimport Error from '../Error'\nimport './NoteListMain.css'\n\nexport default class NoteListMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n\n  static propTypes = {\n    note: PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n      name: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      modified: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      onDeleteNote: PropTypes.func\n    })\n  }\n  static contextType = ApiContext\n\n  render() {\n    const { folderId } = this.props.match.params\n    const { notes=[] } = this.context\n    const notesForFolder = getNotesForFolder(notes, folderId)\n    return (\n      <section className='NoteListMain'>\n        <Error>\n        <ul>\n          {notesForFolder.map(note =>\n            <li key={note.id}>\n              <Note\n                id={note.id}\n                name={note.name}\n                modified={note.modified}\n              />\n            </li>\n          )}\n        </ul>\n        </Error>\n        <div className='NoteListMain__button-container'>\n          <CircleButton\n            tag={Link}\n            to='/add-note'\n            type='button'\n            className='NoteListMain__add-note-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Note\n          </CircleButton>\n        </div>\n      </section>\n    )\n  }\n}\n","import React from 'react'\nimport Note from '../Note/Note'\nimport ApiContext from '../ApiContext'\nimport PropTypes from 'prop-types'\nimport { findNote } from '../notes-helpers'\nimport Error from '../Error'\nimport './NotePageMain.css'\n\nexport default class NotePageMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n\n  static propTypes = {\n    note: PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n      name: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      modified: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      onDeleteNote: PropTypes.func\n    })\n  }\n\n  static contextType = ApiContext\n\n  handleDeleteNote = noteId => {\n    this.props.history.push(`/`)\n  }\n\n  render() {\n    const { notes=[] } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || { content: '' }\n    return (\n      <section className='NotePageMain'>\n        <Error>\n        <Note\n          id={note.id}\n          name={note.name}\n          modified={note.modified}\n          onDeleteNote={this.handleDeleteNote}\n        />\n        <div className='NotePageMain__content'>\n          {note.content.split(/\\n \\r|\\n/).map((para, i) =>\n            <p key={i}>{para}</p>\n          )}\n        </div>\n        </Error>\n      </section>\n    )\n  }\n}\n","import React from 'react'\nimport './NotefulForm.css'\n\nexport default function NotefulForm(props) {\n  const { className, ...otherProps } = props\n  return (\n    <form\n      className={['Noteful-form', className].join(' ')}\n      action='#'\n      {...otherProps}\n    />\n  )\n}\n","import React, { Component } from 'react';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport ApiContext from '../ApiContext';\nimport PropTypes from 'prop-types'\nimport config from '../config';\n\nexport class AddFolder extends Component {\n    static defaultProps = {\n        history: {\n            push: () => {}\n        },\n    }\n\n    static propTypes = {\n    onSubmit: PropTypes.func,\n    onClick: PropTypes.func,\n    folder: PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n      name: PropTypes.string.isRequired\n    }),\n    note: PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n      name: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      modified: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      onDeleteNote: PropTypes.func\n    })\n  }\n    static contextType = ApiContext;\n\nhandleSubmit(event) {\n    event.preventDefault();\n    const folder = {\n        name: event.target['new-folder-name'].value\n    }\n    fetch(`${config.API_ENDPOINT}/folders`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(folder),\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(folder => {\n        this.context.addFolder(folder)\n        this.props.history.push(`/folder/${folder.id}`)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n}    \n\nhandleClickCancel = () => {\n  this.props.history.push('/')\n}\n\n    render() {\n        return (\n            <section>\n            <h2>Add New Folder</h2>\n            <NotefulForm onSubmit={this.handleSubmit}>\n                <div>\n                    <label htmlFor=\"new-folder-name\">\n                        Folder Name\n                    </label>\n                    <input type='text' id='new-folder-name' name='new-folder-name'/>\n                </div>\n                <div>\n                    <button type='submit'>\n                        Add\n                    </button>\n                    <button onClick={this.handleClickCancel}>\n                        Cancel\n                    </button>\n                </div>\n            </NotefulForm>\n            </section>\n        )\n    }\n}\n\nexport default AddFolder\n","import React, { Component } from 'react'\nimport NotefulForm from '../NotefulForm/NotefulForm'\nimport PropTypes from 'prop-types'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\n\nexport class AddNote extends Component {\n    static defaultProps = {\n        history: {\n            push: () => {}\n        }\n    }\n\nstatic propTypes = {\n    onSubmit: PropTypes.func,\n    onClick: PropTypes.func,\n    folder: PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n      name: PropTypes.string.isRequired\n    }),\n    note: PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n      name: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      modified: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      onDeleteNote: PropTypes.func\n    })\n  }\n\nstatic contextType = ApiContext;\n\nhandleClickCancel = () => {\n  this.props.history.push('/')\n}\n\nhandleSubmit(event) {\n    event.preventDefault();\n    const newNote = {\n        name: event.target['new-note-name'].value,\n        content: event.target['new-note-content'].value,\n        folder: event.target['note-folder'].value,\n        modified: new Date()\n    }\n    fetch(`${config.API_ENDPOINT}/notes`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(newNote),\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(note => {\n        this.context.addNote(note)\n        this.props.history.push(`/folder/${note.folderId}`)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n}\n    render() {\n        const {folders = []} = this.context;\n        return (\n            <section>\n                <h2>Add New Note</h2>\n                <NotefulForm onSubmit={this.handleSubmit}>\n                    <div>\n                        <label htmlFor=\"new-note-name\">Name</label>\n                        <input type='text' id='new-note-name' name='new-note-name' />\n                    </div>\n                    <div>\n                        <label htmlFor=\"new-note-content\">Content</label>\n                        <textarea id='new-note-content' name='new-note-content' />\n                    </div>\n                    <div>\n                        <label htmlFor=\"note-folder-select\">Choose Folder</label>\n                        <select id='note-folder-select' name='note-folder-id'>\n                            <option value={null}>...</option>\n                            {folders.map(folder =>\n                                <option key={folder.id} value={folder.id}>\n                                {folder.name}\n                                </option>\n                            )}\n                        </select>\n                    </div>\n                    <div>\n                        <button type='submit'>Add</button>\n                        <button onClick={this.handleClickCancel}>Cancel</button>\n                    </div>\n                </NotefulForm>\n            </section>\n        )\n    }\n}\n\nexport default AddNote\n","import React, {Component} from 'react';\nimport {Route, Link} from 'react-router-dom';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nimport AddFolder from '../AddFolder/AddFolder'\nimport AddNote from '../AddNote/AddNote'\nimport './App.css';\n\nclass App extends Component {\n    state = {\n        notes: [],\n        folders: []\n    };\n\n    componentDidMount() {\n        Promise.all([\n            fetch(`${config.API_ENDPOINT}/notes`),\n            fetch(`${config.API_ENDPOINT}/folders`)\n        ])\n            .then(([notesRes, foldersRes]) => {\n                if (!notesRes.ok)\n                    return notesRes.json().then(e => Promise.reject(e));\n                if (!foldersRes.ok)\n                    return foldersRes.json().then(e => Promise.reject(e));\n\n                return Promise.all([notesRes.json(), foldersRes.json()]);\n            })\n            .then(([notes, folders]) => {\n                this.setState({notes, folders});\n            })\n            .catch(error => {\n                console.error({error});\n            });\n    }\n\n    handleDeleteNote = noteId => {\n        this.setState({\n            notes: this.state.notes.filter(note => note.id !== noteId)\n        });\n    };\n\n    handleAddFolder = folder => {\n    this.setState({\n      folders: [\n        ...this.state.folders,\n        folder\n      ]\n    })\n  }\n\n    handleAddNote = note => {\n    this.setState({\n      notes: [\n        ...this.state.notes,\n        note\n      ]\n    })\n  }\n\n    renderNavRoutes() {\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListNav}\n                    />\n                ))}\n                <Route path=\"/note/:noteId\" component={NotePageNav} />\n                <Route path=\"/add-folder\" component={NotePageNav} />\n                <Route path=\"/add-note\" component={NotePageNav} />\n            </>\n        );\n    }\n\n    renderMainRoutes() {\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListMain}\n                    />\n                ))}\n                <Route path=\"/note/:noteId\" component={NotePageMain} />\n                <Route path='/add-folder' component={AddFolder} />\n                <Route path='/add-note' component={AddNote} />\n            </>\n        );\n    }\n\n    render() {\n        const value = {\n            notes: this.state.notes,\n            folders: this.state.folders,\n            addFolder: this.handleAddFolder,\n            addNote: this.handleAddNote,\n            deleteNote: this.handleDeleteNote\n        };\n        return (\n            <ApiContext.Provider value={value}>\n                <div className=\"App\">\n                    <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\n                    <header className=\"App__header\">\n                        <h1>\n                            <Link to=\"/\">Noteful</Link>{' '}\n                            <FontAwesomeIcon icon=\"check-double\" />\n                        </h1>\n                    </header>\n                    <main className=\"App__main\">{this.renderMainRoutes()}</main>\n                </div>\n            </ApiContext.Provider>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\n} from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'typeface-roboto'\nimport './index.css'\nimport App from './App/App'\n\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}